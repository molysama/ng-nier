!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ng-nier/checkbox",["exports","@angular/core","@angular/forms","@angular/common"],t):t(((e=e||self)["ng-nier"]=e["ng-nier"]||{},e["ng-nier"].checkbox={}),e.ng.core,e.ng.forms,e.ng.common)}(this,(function(e,t,o,n){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function r(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var n,r,i=o.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)c.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(o=i.return)&&o.call(i)}finally{if(r)throw r.error}}return c}var i=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),c=function(){function e(e){this.cd=e,this.label="",this.onChange=new t.EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){},this.checked=!1}return e.prototype.onClick=function(e){e.preventDefault(),this.disabled||(this.checked=!this.checked,this.updateModel())},e.prototype.updateModel=function(){"[object Array]"===Object.prototype.toString.call(this.model)?(this.checked?this.addValue():this.removeValue(),this.onModelChange(this.model)):this.onModelChange(this.checked),this.onChange.emit(this.checked)},e.prototype.addValue=function(){void 0!==this.value&&(this.model=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e}(this.model,[this.value]))},e.prototype.removeValue=function(){var e=this;void 0!==this.value&&(this.model=this.model.filter((function(t){return t!==e.value})))},e.prototype.writeValue=function(e){this.model=e,"[object Array]"===Object.prototype.toString.call(this.model)?void 0!==this.value&&(this.checked=this.model.indexOf(this.value)>-1):this.checked=this.model,this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.decorators=[{type:t.Component,args:[{selector:"nr-checkbox",template:"<div class=\"nr-checkbox\" (click)=\"onClick($event)\">\n  <div [ngClass]=\"{'label': true, 'disabled': disabled, 'is-checked': checked}\">{{label}}</div>\n</div>",providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return e})),multi:!0}]}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},e.propDecorators={label:[{type:t.Input}],value:[{type:t.Input}],disabled:[{type:t.Input}],onChange:[{type:t.Output}]},e}();var a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[c],imports:[n.CommonModule],exports:[c]}]}],e}();e.CheckboxComponent=c,e.CheckboxModule=a,e.CheckboxService=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-nier-checkbox.umd.min.js.map